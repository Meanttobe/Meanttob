<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第九届河南理工大学算法程序设计大赛</title>
      <link href="/2019/04/02/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E6%B2%B3%E5%8D%97%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B/"/>
      <url>/2019/04/02/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E6%B2%B3%E5%8D%97%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p>自己的第一次正规的acm比赛.</p><h2 id="A-Asia区域赛"><a href="#A-Asia区域赛" class="headerlink" title="A. Asia区域赛"></a>A. Asia区域赛<br></h2><p>此次大赛由我校承办是该项国际赛事首次进入河南高校，为加强我校对外交流与合作、展示我校办学水平提供了宝贵的机会和平台，对进一步探讨教育教学改革的经验和做法、推进我校计算机类学科建设、培育拔尖创新人才具有重要意义。<br><br><strong>输入:</strong><br><br>本题没有输入要求.<br><br><strong>输出:</strong><br><br>请输出文中表述的发放奖牌个数，并单独占一行.<br><br><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> a=<span class="number">29</span>+<span class="number">58</span>+<span class="number">87</span>+<span class="number">11</span>+<span class="number">2</span>;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="B-Asia区域制"><a href="#B-Asia区域制" class="headerlink" title="B. Asia区域制"></a>B. Asia区域制</h2><p>二进制数据是用 0 和 1 两个数码来表示的数.它的基数为 2 ，进位规则是“逢二进一”，借位规则是“借一当二”，由18世纪德国数理哲学大师莱布尼兹发现.<br>十六进制（简写为hex或下标 16 ）在数学中是一种逢 16 进 1 的进位制.一般用数字 0 到 9 和字母 A 到 F（或 a ~ f ）表示，其中: a ~ f 表示 10 ~ 15 ，这些称作十六进制数字.<br>请将给定的二进制数转为十六进制数，英文字母使用小写形式.<br><br><strong>输入</strong><br><br>第一行一个正整数 T， 代表有 T 组测试数据. (1≤T≤10).<br>接下来 T 行，每行输入一串只包含 0 和 1 的字符串（无前导 0），字符串长度：1≤length≤106.<br><br><strong><em>输出</em></strong><br><br>对于每组测试样例，输出转化后的十六进制数并单独占一行.<br><br></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"> <span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> <span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"> <span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">char</span>&gt;mp;</span><br><span class="line">    mp[<span class="string">"0000"</span>]=<span class="string">'0'</span>; mp[<span class="string">"0001"</span>]=<span class="string">'1'</span>;</span><br><span class="line">    mp[<span class="string">"0010"</span>]=<span class="string">'2'</span>; mp[<span class="string">"0011"</span>]=<span class="string">'3'</span>;</span><br><span class="line">    mp[<span class="string">"0100"</span>]=<span class="string">'4'</span>; mp[<span class="string">"0101"</span>]=<span class="string">'5'</span>;</span><br><span class="line">    mp[<span class="string">"0110"</span>]=<span class="string">'6'</span>; mp[<span class="string">"0111"</span>]=<span class="string">'7'</span>;</span><br><span class="line">    mp[<span class="string">"1000"</span>]=<span class="string">'8'</span>; mp[<span class="string">"1001"</span>]=<span class="string">'9'</span>;</span><br><span class="line">    mp[<span class="string">"1010"</span>]=<span class="string">'a'</span>; mp[<span class="string">"1011"</span>]=<span class="string">'b'</span>;</span><br><span class="line">    mp[<span class="string">"1100"</span>]=<span class="string">'c'</span>; mp[<span class="string">"1101"</span>]=<span class="string">'d'</span>;</span><br><span class="line">    mp[<span class="string">"1110"</span>]=<span class="string">'e'</span>; mp[<span class="string">"1111"</span>]=<span class="string">'f'</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;arr;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> ii=<span class="number">0</span>;ii&lt;n;ii++)&#123;</span><br><span class="line">       <span class="built_in">string</span> a;</span><br><span class="line">       <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">       <span class="keyword">for</span>(ll i;a.size()&gt;<span class="number">4</span>;)&#123;</span><br><span class="line">        i=a.size()<span class="number">-4</span>;</span><br><span class="line">        <span class="built_in">string</span> aa=<span class="string">"0000"</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll ii=<span class="number">0</span>;ii&lt;<span class="number">4</span>;ii++)&#123;</span><br><span class="line">        aa[ii]=a[i];</span><br><span class="line">        i++;</span><br><span class="line">        &#125;</span><br><span class="line">        a.erase(a.end()<span class="number">-4</span>,a.end());</span><br><span class="line">        arr.push_back(mp[aa]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a.size()==<span class="number">4</span>)&#123;</span><br><span class="line">        arr.push_back(mp[a]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.size()==<span class="number">3</span>)&#123;</span><br><span class="line">        a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">         arr.push_back(mp[a]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.size()==<span class="number">2</span>)&#123;</span><br><span class="line">        a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">        a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">         arr.push_back(mp[a]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.size()==<span class="number">1</span>)&#123;</span><br><span class="line">        a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">        a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">        a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">         arr.push_back(mp[a]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=arr.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ii&lt;n)&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    arr.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-Mo的游戏"><a href="#E-Mo的游戏" class="headerlink" title="E. Mo的游戏"></a>E. Mo的游戏</h2><p>Mo翻书看到一种新的连连看游戏：对于一个字符串来说，只有当两个字符相同时候才可以进行相连，得分为字符串的长度减去两个相连字符的距离（如果整个字符串中某一种字符个数为1，那么不能相连故得分为0）。Mo现在在玩这个游戏，但是Mo不知道该选择哪一种字符进行相连，所以请你列出每种字符相连可以获得的最大分数，以此来让Mo进行参考。<br><br><strong>输入</strong><br>一个字符串s （0&lt;strlen(s)&lt;106， s中只包含大小写字符）。<br><br><strong>输出</strong><br>针对s中出现过的字符，每行输出一个整数表示用当前字符进行相连可以获得的最大分数, 按照a−z，A−Z的顺序。<br><br></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"> <span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> <span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>, pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;mp;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a.size(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (mp[a[i - <span class="number">1</span>]].first == <span class="number">0</span>) &#123;</span><br><span class="line">mp[a[i - <span class="number">1</span>]] = &#123; i,MAX &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(i-mp[a[i<span class="number">-1</span>]].first&lt; mp[a[i - <span class="number">1</span>]].second)&#123;</span><br><span class="line">mp[a[i - <span class="number">1</span>]] = &#123; i,i - mp[a[i - <span class="number">1</span>]].first &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">mp[a[i - <span class="number">1</span>]] = &#123; i,mp[a[i<span class="number">-1</span>]].second &#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> i = <span class="string">'a'</span>; i &lt;= <span class="string">'z'</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (mp[i].second == <span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mp[i].second == MAX) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">':'</span> &lt;&lt; <span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">':'</span> &lt;&lt; a.size()-mp[i].second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> i = <span class="string">'A'</span>; i &lt;= <span class="string">'Z'</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (mp[i].second == <span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mp[i].second == MAX) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">':'</span> &lt;&lt; <span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">':'</span> &lt;&lt; a.size() - mp[i].second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first blog</title>
      <link href="/2019/04/02/first-blog/"/>
      <url>/2019/04/02/first-blog/</url>
      
        <content type="html"><![CDATA[<p>终于弄好了自己的个人博客<br></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好，hexo</title>
      <link href="/2019/04/01/%E4%BD%A0%E5%A5%BD%EF%BC%8Chexo/"/>
      <url>/2019/04/01/%E4%BD%A0%E5%A5%BD%EF%BC%8Chexo/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><br><br>ma文件的基础使用方法<br><strong>粗体效果</strong></p><p>*斜体效果</p><blockquote><p>引用？*</p></blockquote><p>cd /D/Workspaces/hexo/</p><pre><code>#include &lt;iostream&gt;</code></pre><h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><h4 id="标题四"><a href="#标题四" class="headerlink" title="标题四"></a>标题四</h4><p><a href="http://meanttobe.github.io" title="我的博客" target="_blank" rel="noopener">http://meanttobe.github.io</a></p><hr><p>水平标尺<br><br>时间戳2019/4/3 12:51:06 </p><pre><code class="c"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
