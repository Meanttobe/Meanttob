<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>meant to be</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-08T03:12:34.027Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>meant1</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简单二分和n的阶乘中5的个数</title>
    <link href="http://yoursite.com/2019/04/08/%E7%AE%80%E5%8D%95%E4%BA%8C%E5%88%86%E5%92%8Cn%E7%9A%84%E9%98%B6%E4%B9%98%E4%B8%AD5%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <id>http://yoursite.com/2019/04/08/简单二分和n的阶乘中5的个数/</id>
    <published>2019-04-08T03:10:21.000Z</published>
    <updated>2019-04-08T03:12:34.027Z</updated>
    
    <content type="html"><![CDATA[<h3 id="n的阶乘中末尾零的个数"><a href="#n的阶乘中末尾零的个数" class="headerlink" title="n的阶乘中末尾零的个数"></a>n的阶乘中末尾零的个数</h3><p>可以理解为n的阶乘5的个数<br>z=n/5+n/(5^2)+n/(5^3)……直到n/(5^a)&lt;0</p><p>代码如下：</p><pre><code>long long trailingZeros(long long n){    long long num;    while(n)    {        num+=n/5;        n/=5;    }    return num;}</code></pre><p>简单二分：<br>1 2 3 4 5 ..x….n;<br>l                r</p><p>从上述数中找x.</p><pre><code>res=0;while(r&gt;l){    ll mid=(l+r)/2;    if(mid==x){        res=mid;    }    else if(mid&lt;x){    left=mid+1;    }    else{    right=mid-1;    }}cout&lt;res&lt;&lt;endl;</code></pre><h3 id="例题：D-Trailing-Zeroes-III"><a href="#例题：D-Trailing-Zeroes-III" class="headerlink" title="例题：D - Trailing Zeroes (III)"></a>例题：D - Trailing Zeroes (III)</h3><p>n的阶乘尾部有q个连续的0，现在给你q，请你算出满足条件的n，如果有多个n满足条件，输出最小的那个即可。</p><p><strong>input:</strong>输入一个T(T &lt;= 10000),表示样例数量。<br>每个样例输入一个q。(1 &lt;= q &lt;= 100,000,000)</p><p><strong>output:</strong>对于每个样例，输出满足条件的最小的n，如果没有满足条件的则输出”impossible”。</p><p>代码如下：</p><pre><code>#include &lt;bits/stdc++.h&gt;using namespace std;typedef long long ll;const ll MAX = 1e17 + 7;ll ans(ll a) {    ll num = 0;    while (a) {        num += (a / 5);        a /= 5;    }    return num;}int main() {    int n, num = 1;    cin &gt;&gt; n;    while (n--) {    ll a,mid, res = 0, left = 0, right = MAX;        cin &gt;&gt; a;        while (right &gt; left) {            mid = ans((left + right) / 2);        if (mid == a) {                res = (left + right) / 2;                right--;            }        else if (a &lt; mid) {                right = (left + right) / 2 - 1;            }            else {            left = (left + right) / 2 + 1;            }        }    if (res) {            cout &lt;&lt; &quot;Case &quot; &lt;&lt; num &lt;&lt; &quot;: &quot; &lt;&lt; res &lt;&lt; endl;        }        else {        cout &lt;&lt; &quot;Case &quot; &lt;&lt; num &lt;&lt; &quot;: impossible&quot; &lt;&lt; endl;        }        num++;    }return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;n的阶乘中末尾零的个数&quot;&gt;&lt;a href=&quot;#n的阶乘中末尾零的个数&quot; class=&quot;headerlink&quot; title=&quot;n的阶乘中末尾零的个数&quot;&gt;&lt;/a&gt;n的阶乘中末尾零的个数&lt;/h3&gt;&lt;p&gt;可以理解为n的阶乘5的个数&lt;br&gt;z=n/5+n/(5^2)+n/(
      
    
    </summary>
    
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>第九届河南理工大学算法程序设计大赛</title>
    <link href="http://yoursite.com/2019/04/02/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E6%B2%B3%E5%8D%97%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B/"/>
    <id>http://yoursite.com/2019/04/02/第九届河南理工大学算法程序设计大赛/</id>
    <published>2019-04-02T07:55:33.000Z</published>
    <updated>2019-04-08T03:14:15.165Z</updated>
    
    <content type="html"><![CDATA[<p>自己的第一次正规的acm比赛.</p><h2 id="A-Asia区域赛"><a href="#A-Asia区域赛" class="headerlink" title="A. Asia区域赛"></a>A. Asia区域赛</h2><p>此次大赛由我校承办是该项国际赛事首次进入河南高校，为加强我校对外交流与合作、展示我校办学水平提供了宝贵的机会和平台，对进一步探讨教育教学改革的经验和做法、推进我校计算机类学科建设、培育拔尖创新人才具有重要意义。<br><a id="more"></a><br><strong>输入:</strong><br>本题没有输入要求.<br><strong>输出:</strong><br>请输出文中表述的发放奖牌个数，并单独占一行.</p><pre><code> #include &lt;iostream&gt; #include &lt;map&gt; #include &lt;string&gt; using namespace std; int main(){    int a=29+58+87+11+2;    cout&lt;&lt;a&lt;&lt;endl;    return 0;}</code></pre><h2 id="B-Asia区域制"><a href="#B-Asia区域制" class="headerlink" title="B. Asia区域制"></a>B. Asia区域制</h2><p>二进制数据是用 0 和 1 两个数码来表示的数.它的基数为 2 ，进位规则是“逢二进一”，借位规则是“借一当二”，由18世纪德国数理哲学大师莱布尼兹发现.<br>十六进制（简写为hex或下标 16 ）在数学中是一种逢 16 进 1 的进位制.一般用数字 0 到 9 和字母 A 到 F（或 a ~ f ）表示，其中: a ~ f 表示 10 ~ 15 ，这些称作十六进制数字.<br>请将给定的二进制数转为十六进制数，英文字母使用小写形式.</p><p><strong>输入</strong><br>第一行一个正整数 T， 代表有 T 组测试数据. (1≤T≤10).<br>接下来 T 行，每行输入一串只包含 0 和 1 的字符串（无前导 0），字符串长度：1≤length≤106.<br><strong><em>输出</em></strong><br>对于每组测试样例，输出转化后的十六进制数并单独占一行.</p><pre><code> #include &lt;iostream&gt; #include &lt;map&gt; #include &lt;string&gt; #include &lt;vector&gt; using namespace std; typedef long long ll; const int MAX=1e6+7; int main(){    map&lt;string,char&gt;mp;    mp[&quot;0000&quot;]=&apos;0&apos;; mp[&quot;0001&quot;]=&apos;1&apos;;    mp[&quot;0010&quot;]=&apos;2&apos;; mp[&quot;0011&quot;]=&apos;3&apos;;    mp[&quot;0100&quot;]=&apos;4&apos;; mp[&quot;0101&quot;]=&apos;5&apos;;    mp[&quot;0110&quot;]=&apos;6&apos;; mp[&quot;0111&quot;]=&apos;7&apos;;    mp[&quot;1000&quot;]=&apos;8&apos;; mp[&quot;1001&quot;]=&apos;9&apos;;    mp[&quot;1010&quot;]=&apos;a&apos;; mp[&quot;1011&quot;]=&apos;b&apos;;    mp[&quot;1100&quot;]=&apos;c&apos;; mp[&quot;1101&quot;]=&apos;d&apos;;    mp[&quot;1110&quot;]=&apos;e&apos;; mp[&quot;1111&quot;]=&apos;f&apos;;    vector&lt;char&gt;arr;    int n;    cin&gt;&gt;n;    for(int ii=0;ii&lt;n;ii++){       string a;       cin&gt;&gt;a;       for(ll i;a.size()&gt;4;){            i=a.size()-4;            string aa=&quot;0000&quot;;            for(ll ii=0;ii&lt;4;ii++){            aa[ii]=a[i];            i++;            }            a.erase(a.end()-4,a.end());            arr.push_back(mp[aa]);        }        if(a.size()==4){            arr.push_back(mp[a]);        }        else if(a.size()==3){            a.insert(a.begin(),&apos;0&apos;);             arr.push_back(mp[a]);        }        else if(a.size()==2){            a.insert(a.begin(),&apos;0&apos;);            a.insert(a.begin(),&apos;0&apos;);             arr.push_back(mp[a]);        }        else if(a.size()==1){            a.insert(a.begin(),&apos;0&apos;);            a.insert(a.begin(),&apos;0&apos;);            a.insert(a.begin(),&apos;0&apos;);             arr.push_back(mp[a]);        }        for(ll i=arr.size()-1;i&gt;=0;i--){            cout&lt;&lt;arr[i];        }        if(ii&lt;n){        cout&lt;&lt;endl;        arr.clear();        }    }    return 0; }</code></pre><h2 id="E-Mo的游戏"><a href="#E-Mo的游戏" class="headerlink" title="E. Mo的游戏"></a>E. Mo的游戏</h2><p>Mo翻书看到一种新的连连看游戏：对于一个字符串来说，只有当两个字符相同时候才可以进行相连，得分为字符串的长度减去两个相连字符的距离（如果整个字符串中某一种字符个数为1，那么不能相连故得分为0）。Mo现在在玩这个游戏，但是Mo不知道该选择哪一种字符进行相连，所以请你列出每种字符相连可以获得的最大分数，以此来让Mo进行参考。</p><p><strong>输入</strong><br>一个字符串s （0&lt;strlen(s)&lt;106， s中只包含大小写字符）。<br><strong>输出</strong><br>针对s中出现过的字符，每行输出一个整数表示用当前字符进行相连可以获得的最大分数, 按照a−z，A−Z的顺序。</p><pre><code>#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;map&gt;#include &lt;string&gt;#include &lt;vector&gt;using namespace std;const int MAX = 1e9 + 7;int main() {    map&lt;char, pair&lt;int, int&gt; &gt;mp;    string a;    cin &gt;&gt; a;    for (int i = 1; i &lt;= a.size(); i++) {        if (mp[a[i - 1]].first == 0) {            mp[a[i - 1]] = { i,MAX };        }        else {            if(i-mp[a[i-1]].first&lt; mp[a[i - 1]].second{                mp[a[i - 1]] = { i,i - mp[a[i -1]].first };            }            else {                mp[a[i - 1]] = { i,mp[a[i-1]].second };            }        }    }    for (char i = &apos;a&apos;; i &lt;= &apos;z&apos;; i++) {        if (mp[i].second == 0);        else if (mp[i].second == MAX) {            cout &lt;&lt; i &lt;&lt; &apos;:&apos; &lt;&lt; 0&lt;&lt;endl;        }        else {            cout &lt;&lt; i &lt;&lt; &apos;:&apos; &lt;&lt; a.size()-mp[i].second;            cout&lt;&lt;endl;        }    }    for (char i = &apos;A&apos;; i &lt;= &apos;Z&apos;; i++) {        if (mp[i].second == 0);        else if (mp[i].second == MAX) {            cout &lt;&lt; i &lt;&lt; &apos;:&apos; &lt;&lt; 0&lt;&lt;endl;        }        else {            cout &lt;&lt; i &lt;&lt; &apos;:&apos;&lt;&lt;a.size() - mp[i].second;            cout&lt;&lt; endl;        }    }    return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己的第一次正规的acm比赛.&lt;/p&gt;
&lt;h2 id=&quot;A-Asia区域赛&quot;&gt;&lt;a href=&quot;#A-Asia区域赛&quot; class=&quot;headerlink&quot; title=&quot;A. Asia区域赛&quot;&gt;&lt;/a&gt;A. Asia区域赛&lt;/h2&gt;&lt;p&gt;此次大赛由我校承办是该项国际赛事首次进入河南高校，为加强我校对外交流与合作、展示我校办学水平提供了宝贵的机会和平台，对进一步探讨教育教学改革的经验和做法、推进我校计算机类学科建设、培育拔尖创新人才具有重要意义。&lt;br&gt;
    
    </summary>
    
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
</feed>
